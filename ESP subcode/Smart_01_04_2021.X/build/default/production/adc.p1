Version 3.2 HI-TECH Software Intermediate Code
"771 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic16f688.h
[v _CMCON0 `Vuc ~T0 @X0 0 e@25 ]
"1357
[v _ANSEL `Vuc ~T0 @X0 0 e@145 ]
"871
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"1914
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"865
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"1908
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
[v F888 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic.h
[v __delay `JF888 ~T0 @X0 0 e ]
[p i __delay ]
"2053 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic16f688.h
[v _GO_DONE `Vb ~T0 @X0 0 e@249 ]
"877
[s S37 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S37 . ADON GO_nDONE CHS . VCFG ADFM ]
"885
[s S38 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S38 . . GO CHS0 CHS1 CHS2 ]
"892
[s S39 :1 `uc 1 :1 `uc 1 ]
[n S39 . . nDONE ]
"896
[s S40 :1 `uc 1 :1 `uc 1 ]
[n S40 . . GO_DONE ]
"876
[u S36 `S37 1 `S38 1 `S39 1 `S40 1 ]
[n S36 . . . . . ]
"901
[v _ADCON0bits `VS36 ~T0 @X0 0 e@31 ]
"433
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
"427
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"445
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . TMR1ON TMR1CS nT1SYNC T1OSCEN T1CKPS TMR1GE T1GINV ]
"454
[s S19 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . . T1CKPS0 T1CKPS1 ]
"444
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"460
[v _T1CONbits `VS17 ~T0 @X0 0 e@16 ]
"207
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f688.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic16f688.h
[; ;pic16f688.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f688.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f688.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f688.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f688.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f688.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f688.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f688.h: 72: typedef union {
[; ;pic16f688.h: 73: struct {
[; ;pic16f688.h: 74: unsigned C :1;
[; ;pic16f688.h: 75: unsigned DC :1;
[; ;pic16f688.h: 76: unsigned Z :1;
[; ;pic16f688.h: 77: unsigned nPD :1;
[; ;pic16f688.h: 78: unsigned nTO :1;
[; ;pic16f688.h: 79: unsigned RP :2;
[; ;pic16f688.h: 80: unsigned IRP :1;
[; ;pic16f688.h: 81: };
[; ;pic16f688.h: 82: struct {
[; ;pic16f688.h: 83: unsigned :5;
[; ;pic16f688.h: 84: unsigned RP0 :1;
[; ;pic16f688.h: 85: unsigned RP1 :1;
[; ;pic16f688.h: 86: };
[; ;pic16f688.h: 87: struct {
[; ;pic16f688.h: 88: unsigned CARRY :1;
[; ;pic16f688.h: 89: unsigned :1;
[; ;pic16f688.h: 90: unsigned ZERO :1;
[; ;pic16f688.h: 91: };
[; ;pic16f688.h: 92: } STATUSbits_t;
[; ;pic16f688.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f688.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f688.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f688.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f688.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f688.h: 163: typedef union {
[; ;pic16f688.h: 164: struct {
[; ;pic16f688.h: 165: unsigned RA0 :1;
[; ;pic16f688.h: 166: unsigned RA1 :1;
[; ;pic16f688.h: 167: unsigned RA2 :1;
[; ;pic16f688.h: 168: unsigned RA3 :1;
[; ;pic16f688.h: 169: unsigned RA4 :1;
[; ;pic16f688.h: 170: unsigned RA5 :1;
[; ;pic16f688.h: 171: };
[; ;pic16f688.h: 172: } PORTAbits_t;
[; ;pic16f688.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f688.h: 207: extern volatile unsigned char PORTC @ 0x007;
"209
[; ;pic16f688.h: 209: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f688.h: 212: typedef union {
[; ;pic16f688.h: 213: struct {
[; ;pic16f688.h: 214: unsigned RC0 :1;
[; ;pic16f688.h: 215: unsigned RC1 :1;
[; ;pic16f688.h: 216: unsigned RC2 :1;
[; ;pic16f688.h: 217: unsigned RC3 :1;
[; ;pic16f688.h: 218: unsigned RC4 :1;
[; ;pic16f688.h: 219: unsigned RC5 :1;
[; ;pic16f688.h: 220: };
[; ;pic16f688.h: 221: } PORTCbits_t;
[; ;pic16f688.h: 222: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f688.h: 256: extern volatile unsigned char PCLATH @ 0x00A;
"258
[; ;pic16f688.h: 258: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f688.h: 261: typedef union {
[; ;pic16f688.h: 262: struct {
[; ;pic16f688.h: 263: unsigned PCLATH :5;
[; ;pic16f688.h: 264: };
[; ;pic16f688.h: 265: } PCLATHbits_t;
[; ;pic16f688.h: 266: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f688.h: 275: extern volatile unsigned char INTCON @ 0x00B;
"277
[; ;pic16f688.h: 277: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f688.h: 280: typedef union {
[; ;pic16f688.h: 281: struct {
[; ;pic16f688.h: 282: unsigned RAIF :1;
[; ;pic16f688.h: 283: unsigned INTF :1;
[; ;pic16f688.h: 284: unsigned T0IF :1;
[; ;pic16f688.h: 285: unsigned RAIE :1;
[; ;pic16f688.h: 286: unsigned INTE :1;
[; ;pic16f688.h: 287: unsigned T0IE :1;
[; ;pic16f688.h: 288: unsigned PEIE :1;
[; ;pic16f688.h: 289: unsigned GIE :1;
[; ;pic16f688.h: 290: };
[; ;pic16f688.h: 291: struct {
[; ;pic16f688.h: 292: unsigned :2;
[; ;pic16f688.h: 293: unsigned TMR0IF :1;
[; ;pic16f688.h: 294: unsigned :2;
[; ;pic16f688.h: 295: unsigned TMR0IE :1;
[; ;pic16f688.h: 296: };
[; ;pic16f688.h: 297: } INTCONbits_t;
[; ;pic16f688.h: 298: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f688.h: 352: extern volatile unsigned char PIR1 @ 0x00C;
"354
[; ;pic16f688.h: 354: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f688.h: 357: typedef union {
[; ;pic16f688.h: 358: struct {
[; ;pic16f688.h: 359: unsigned TMR1IF :1;
[; ;pic16f688.h: 360: unsigned TXIF :1;
[; ;pic16f688.h: 361: unsigned OSFIF :1;
[; ;pic16f688.h: 362: unsigned C1IF :1;
[; ;pic16f688.h: 363: unsigned C2IF :1;
[; ;pic16f688.h: 364: unsigned RCIF :1;
[; ;pic16f688.h: 365: unsigned ADIF :1;
[; ;pic16f688.h: 366: unsigned EEIF :1;
[; ;pic16f688.h: 367: };
[; ;pic16f688.h: 368: struct {
[; ;pic16f688.h: 369: unsigned T1IF :1;
[; ;pic16f688.h: 370: };
[; ;pic16f688.h: 371: } PIR1bits_t;
[; ;pic16f688.h: 372: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f688.h: 421: extern volatile unsigned short TMR1 @ 0x00E;
"423
[; ;pic16f688.h: 423: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f688.h: 427: extern volatile unsigned char TMR1L @ 0x00E;
"429
[; ;pic16f688.h: 429: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f688.h: 433: extern volatile unsigned char TMR1H @ 0x00F;
"435
[; ;pic16f688.h: 435: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f688.h: 439: extern volatile unsigned char T1CON @ 0x010;
"441
[; ;pic16f688.h: 441: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f688.h: 444: typedef union {
[; ;pic16f688.h: 445: struct {
[; ;pic16f688.h: 446: unsigned TMR1ON :1;
[; ;pic16f688.h: 447: unsigned TMR1CS :1;
[; ;pic16f688.h: 448: unsigned nT1SYNC :1;
[; ;pic16f688.h: 449: unsigned T1OSCEN :1;
[; ;pic16f688.h: 450: unsigned T1CKPS :2;
[; ;pic16f688.h: 451: unsigned TMR1GE :1;
[; ;pic16f688.h: 452: unsigned T1GINV :1;
[; ;pic16f688.h: 453: };
[; ;pic16f688.h: 454: struct {
[; ;pic16f688.h: 455: unsigned :4;
[; ;pic16f688.h: 456: unsigned T1CKPS0 :1;
[; ;pic16f688.h: 457: unsigned T1CKPS1 :1;
[; ;pic16f688.h: 458: };
[; ;pic16f688.h: 459: } T1CONbits_t;
[; ;pic16f688.h: 460: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f688.h: 509: extern volatile unsigned char BAUDCTL @ 0x011;
"511
[; ;pic16f688.h: 511: asm("BAUDCTL equ 011h");
[; <" BAUDCTL equ 011h ;# ">
[; ;pic16f688.h: 514: typedef union {
[; ;pic16f688.h: 515: struct {
[; ;pic16f688.h: 516: unsigned ABDEN :1;
[; ;pic16f688.h: 517: unsigned WUE :1;
[; ;pic16f688.h: 518: unsigned :1;
[; ;pic16f688.h: 519: unsigned BRG16 :1;
[; ;pic16f688.h: 520: unsigned SCKP :1;
[; ;pic16f688.h: 521: unsigned :1;
[; ;pic16f688.h: 522: unsigned RCIDL :1;
[; ;pic16f688.h: 523: unsigned ABDOVF :1;
[; ;pic16f688.h: 524: };
[; ;pic16f688.h: 525: } BAUDCTLbits_t;
[; ;pic16f688.h: 526: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x011;
[; ;pic16f688.h: 560: extern volatile unsigned char SPBRGH @ 0x012;
"562
[; ;pic16f688.h: 562: asm("SPBRGH equ 012h");
[; <" SPBRGH equ 012h ;# ">
[; ;pic16f688.h: 565: typedef union {
[; ;pic16f688.h: 566: struct {
[; ;pic16f688.h: 567: unsigned SPBRGH :8;
[; ;pic16f688.h: 568: };
[; ;pic16f688.h: 569: } SPBRGHbits_t;
[; ;pic16f688.h: 570: extern volatile SPBRGHbits_t SPBRGHbits @ 0x012;
[; ;pic16f688.h: 579: extern volatile unsigned char SPBRG @ 0x013;
"581
[; ;pic16f688.h: 581: asm("SPBRG equ 013h");
[; <" SPBRG equ 013h ;# ">
[; ;pic16f688.h: 585: extern volatile unsigned char RCREG @ 0x014;
"587
[; ;pic16f688.h: 587: asm("RCREG equ 014h");
[; <" RCREG equ 014h ;# ">
[; ;pic16f688.h: 591: extern volatile unsigned char TXREG @ 0x015;
"593
[; ;pic16f688.h: 593: asm("TXREG equ 015h");
[; <" TXREG equ 015h ;# ">
[; ;pic16f688.h: 597: extern volatile unsigned char TXSTA @ 0x016;
"599
[; ;pic16f688.h: 599: asm("TXSTA equ 016h");
[; <" TXSTA equ 016h ;# ">
[; ;pic16f688.h: 602: typedef union {
[; ;pic16f688.h: 603: struct {
[; ;pic16f688.h: 604: unsigned TX9D :1;
[; ;pic16f688.h: 605: unsigned TRMT :1;
[; ;pic16f688.h: 606: unsigned BRGH :1;
[; ;pic16f688.h: 607: unsigned SENDB :1;
[; ;pic16f688.h: 608: unsigned SYNC :1;
[; ;pic16f688.h: 609: unsigned TXEN :1;
[; ;pic16f688.h: 610: unsigned TX9 :1;
[; ;pic16f688.h: 611: unsigned CSRC :1;
[; ;pic16f688.h: 612: };
[; ;pic16f688.h: 613: } TXSTAbits_t;
[; ;pic16f688.h: 614: extern volatile TXSTAbits_t TXSTAbits @ 0x016;
[; ;pic16f688.h: 658: extern volatile unsigned char RCSTA @ 0x017;
"660
[; ;pic16f688.h: 660: asm("RCSTA equ 017h");
[; <" RCSTA equ 017h ;# ">
[; ;pic16f688.h: 663: typedef union {
[; ;pic16f688.h: 664: struct {
[; ;pic16f688.h: 665: unsigned RX9D :1;
[; ;pic16f688.h: 666: unsigned OERR :1;
[; ;pic16f688.h: 667: unsigned FERR :1;
[; ;pic16f688.h: 668: unsigned ADDEN :1;
[; ;pic16f688.h: 669: unsigned CREN :1;
[; ;pic16f688.h: 670: unsigned SREN :1;
[; ;pic16f688.h: 671: unsigned RX9 :1;
[; ;pic16f688.h: 672: unsigned SPEN :1;
[; ;pic16f688.h: 673: };
[; ;pic16f688.h: 674: } RCSTAbits_t;
[; ;pic16f688.h: 675: extern volatile RCSTAbits_t RCSTAbits @ 0x017;
[; ;pic16f688.h: 719: extern volatile unsigned char WDTCON @ 0x018;
"721
[; ;pic16f688.h: 721: asm("WDTCON equ 018h");
[; <" WDTCON equ 018h ;# ">
[; ;pic16f688.h: 724: typedef union {
[; ;pic16f688.h: 725: struct {
[; ;pic16f688.h: 726: unsigned SWDTEN :1;
[; ;pic16f688.h: 727: unsigned WDTPS :4;
[; ;pic16f688.h: 728: };
[; ;pic16f688.h: 729: struct {
[; ;pic16f688.h: 730: unsigned :1;
[; ;pic16f688.h: 731: unsigned WDTPS0 :1;
[; ;pic16f688.h: 732: unsigned WDTPS1 :1;
[; ;pic16f688.h: 733: unsigned WDTPS2 :1;
[; ;pic16f688.h: 734: unsigned WDTPS3 :1;
[; ;pic16f688.h: 735: };
[; ;pic16f688.h: 736: } WDTCONbits_t;
[; ;pic16f688.h: 737: extern volatile WDTCONbits_t WDTCONbits @ 0x018;
[; ;pic16f688.h: 771: extern volatile unsigned char CMCON0 @ 0x019;
"773
[; ;pic16f688.h: 773: asm("CMCON0 equ 019h");
[; <" CMCON0 equ 019h ;# ">
[; ;pic16f688.h: 776: typedef union {
[; ;pic16f688.h: 777: struct {
[; ;pic16f688.h: 778: unsigned CM :3;
[; ;pic16f688.h: 779: unsigned CIS :1;
[; ;pic16f688.h: 780: unsigned C1INV :1;
[; ;pic16f688.h: 781: unsigned C2INV :1;
[; ;pic16f688.h: 782: unsigned C1OUT :1;
[; ;pic16f688.h: 783: unsigned C2OUT :1;
[; ;pic16f688.h: 784: };
[; ;pic16f688.h: 785: struct {
[; ;pic16f688.h: 786: unsigned CM0 :1;
[; ;pic16f688.h: 787: unsigned CM1 :1;
[; ;pic16f688.h: 788: unsigned CM2 :1;
[; ;pic16f688.h: 789: };
[; ;pic16f688.h: 790: } CMCON0bits_t;
[; ;pic16f688.h: 791: extern volatile CMCON0bits_t CMCON0bits @ 0x019;
[; ;pic16f688.h: 840: extern volatile unsigned char CMCON1 @ 0x01A;
"842
[; ;pic16f688.h: 842: asm("CMCON1 equ 01Ah");
[; <" CMCON1 equ 01Ah ;# ">
[; ;pic16f688.h: 845: typedef union {
[; ;pic16f688.h: 846: struct {
[; ;pic16f688.h: 847: unsigned C2SYNC :1;
[; ;pic16f688.h: 848: unsigned T1GSS :1;
[; ;pic16f688.h: 849: };
[; ;pic16f688.h: 850: } CMCON1bits_t;
[; ;pic16f688.h: 851: extern volatile CMCON1bits_t CMCON1bits @ 0x01A;
[; ;pic16f688.h: 865: extern volatile unsigned char ADRESH @ 0x01E;
"867
[; ;pic16f688.h: 867: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f688.h: 871: extern volatile unsigned char ADCON0 @ 0x01F;
"873
[; ;pic16f688.h: 873: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f688.h: 876: typedef union {
[; ;pic16f688.h: 877: struct {
[; ;pic16f688.h: 878: unsigned ADON :1;
[; ;pic16f688.h: 879: unsigned GO_nDONE :1;
[; ;pic16f688.h: 880: unsigned CHS :3;
[; ;pic16f688.h: 881: unsigned :1;
[; ;pic16f688.h: 882: unsigned VCFG :1;
[; ;pic16f688.h: 883: unsigned ADFM :1;
[; ;pic16f688.h: 884: };
[; ;pic16f688.h: 885: struct {
[; ;pic16f688.h: 886: unsigned :1;
[; ;pic16f688.h: 887: unsigned GO :1;
[; ;pic16f688.h: 888: unsigned CHS0 :1;
[; ;pic16f688.h: 889: unsigned CHS1 :1;
[; ;pic16f688.h: 890: unsigned CHS2 :1;
[; ;pic16f688.h: 891: };
[; ;pic16f688.h: 892: struct {
[; ;pic16f688.h: 893: unsigned :1;
[; ;pic16f688.h: 894: unsigned nDONE :1;
[; ;pic16f688.h: 895: };
[; ;pic16f688.h: 896: struct {
[; ;pic16f688.h: 897: unsigned :1;
[; ;pic16f688.h: 898: unsigned GO_DONE :1;
[; ;pic16f688.h: 899: };
[; ;pic16f688.h: 900: } ADCON0bits_t;
[; ;pic16f688.h: 901: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f688.h: 960: extern volatile unsigned char OPTION_REG @ 0x081;
"962
[; ;pic16f688.h: 962: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f688.h: 965: typedef union {
[; ;pic16f688.h: 966: struct {
[; ;pic16f688.h: 967: unsigned PS :3;
[; ;pic16f688.h: 968: unsigned PSA :1;
[; ;pic16f688.h: 969: unsigned T0SE :1;
[; ;pic16f688.h: 970: unsigned T0CS :1;
[; ;pic16f688.h: 971: unsigned INTEDG :1;
[; ;pic16f688.h: 972: unsigned nRAPU :1;
[; ;pic16f688.h: 973: };
[; ;pic16f688.h: 974: struct {
[; ;pic16f688.h: 975: unsigned PS0 :1;
[; ;pic16f688.h: 976: unsigned PS1 :1;
[; ;pic16f688.h: 977: unsigned PS2 :1;
[; ;pic16f688.h: 978: };
[; ;pic16f688.h: 979: } OPTION_REGbits_t;
[; ;pic16f688.h: 980: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f688.h: 1029: extern volatile unsigned char TRISA @ 0x085;
"1031
[; ;pic16f688.h: 1031: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f688.h: 1034: typedef union {
[; ;pic16f688.h: 1035: struct {
[; ;pic16f688.h: 1036: unsigned TRISA0 :1;
[; ;pic16f688.h: 1037: unsigned TRISA1 :1;
[; ;pic16f688.h: 1038: unsigned TRISA2 :1;
[; ;pic16f688.h: 1039: unsigned TRISA3 :1;
[; ;pic16f688.h: 1040: unsigned TRISA4 :1;
[; ;pic16f688.h: 1041: unsigned TRISA5 :1;
[; ;pic16f688.h: 1042: };
[; ;pic16f688.h: 1043: } TRISAbits_t;
[; ;pic16f688.h: 1044: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f688.h: 1078: extern volatile unsigned char TRISC @ 0x087;
"1080
[; ;pic16f688.h: 1080: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f688.h: 1083: typedef union {
[; ;pic16f688.h: 1084: struct {
[; ;pic16f688.h: 1085: unsigned TRISC0 :1;
[; ;pic16f688.h: 1086: unsigned TRISC1 :1;
[; ;pic16f688.h: 1087: unsigned TRISC2 :1;
[; ;pic16f688.h: 1088: unsigned TRISC3 :1;
[; ;pic16f688.h: 1089: unsigned TRISC4 :1;
[; ;pic16f688.h: 1090: unsigned TRISC5 :1;
[; ;pic16f688.h: 1091: };
[; ;pic16f688.h: 1092: } TRISCbits_t;
[; ;pic16f688.h: 1093: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f688.h: 1127: extern volatile unsigned char PIE1 @ 0x08C;
"1129
[; ;pic16f688.h: 1129: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f688.h: 1132: typedef union {
[; ;pic16f688.h: 1133: struct {
[; ;pic16f688.h: 1134: unsigned TMR1IE :1;
[; ;pic16f688.h: 1135: unsigned TXIE :1;
[; ;pic16f688.h: 1136: unsigned OSFIE :1;
[; ;pic16f688.h: 1137: unsigned C1IE :1;
[; ;pic16f688.h: 1138: unsigned C2IE :1;
[; ;pic16f688.h: 1139: unsigned RCIE :1;
[; ;pic16f688.h: 1140: unsigned ADIE :1;
[; ;pic16f688.h: 1141: unsigned EEIE :1;
[; ;pic16f688.h: 1142: };
[; ;pic16f688.h: 1143: struct {
[; ;pic16f688.h: 1144: unsigned T1IE :1;
[; ;pic16f688.h: 1145: };
[; ;pic16f688.h: 1146: } PIE1bits_t;
[; ;pic16f688.h: 1147: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f688.h: 1196: extern volatile unsigned char PCON @ 0x08E;
"1198
[; ;pic16f688.h: 1198: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f688.h: 1201: typedef union {
[; ;pic16f688.h: 1202: struct {
[; ;pic16f688.h: 1203: unsigned nBOR :1;
[; ;pic16f688.h: 1204: unsigned nPOR :1;
[; ;pic16f688.h: 1205: unsigned :2;
[; ;pic16f688.h: 1206: unsigned SBODEN :1;
[; ;pic16f688.h: 1207: unsigned ULPWUE :1;
[; ;pic16f688.h: 1208: };
[; ;pic16f688.h: 1209: struct {
[; ;pic16f688.h: 1210: unsigned nBOD :1;
[; ;pic16f688.h: 1211: };
[; ;pic16f688.h: 1212: } PCONbits_t;
[; ;pic16f688.h: 1213: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f688.h: 1242: extern volatile unsigned char OSCCON @ 0x08F;
"1244
[; ;pic16f688.h: 1244: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f688.h: 1247: typedef union {
[; ;pic16f688.h: 1248: struct {
[; ;pic16f688.h: 1249: unsigned SCS :1;
[; ;pic16f688.h: 1250: unsigned LTS :1;
[; ;pic16f688.h: 1251: unsigned HTS :1;
[; ;pic16f688.h: 1252: unsigned OSTS :1;
[; ;pic16f688.h: 1253: unsigned IOSCF :3;
[; ;pic16f688.h: 1254: };
[; ;pic16f688.h: 1255: struct {
[; ;pic16f688.h: 1256: unsigned :4;
[; ;pic16f688.h: 1257: unsigned IRCF0 :1;
[; ;pic16f688.h: 1258: unsigned IRCF1 :1;
[; ;pic16f688.h: 1259: unsigned IRCF2 :1;
[; ;pic16f688.h: 1260: };
[; ;pic16f688.h: 1261: } OSCCONbits_t;
[; ;pic16f688.h: 1262: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f688.h: 1306: extern volatile unsigned char OSCTUNE @ 0x090;
"1308
[; ;pic16f688.h: 1308: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f688.h: 1311: typedef union {
[; ;pic16f688.h: 1312: struct {
[; ;pic16f688.h: 1313: unsigned TUN :5;
[; ;pic16f688.h: 1314: };
[; ;pic16f688.h: 1315: struct {
[; ;pic16f688.h: 1316: unsigned TUN0 :1;
[; ;pic16f688.h: 1317: unsigned TUN1 :1;
[; ;pic16f688.h: 1318: unsigned TUN2 :1;
[; ;pic16f688.h: 1319: unsigned TUN3 :1;
[; ;pic16f688.h: 1320: unsigned TUN4 :1;
[; ;pic16f688.h: 1321: };
[; ;pic16f688.h: 1322: } OSCTUNEbits_t;
[; ;pic16f688.h: 1323: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f688.h: 1357: extern volatile unsigned char ANSEL @ 0x091;
"1359
[; ;pic16f688.h: 1359: asm("ANSEL equ 091h");
[; <" ANSEL equ 091h ;# ">
[; ;pic16f688.h: 1362: typedef union {
[; ;pic16f688.h: 1363: struct {
[; ;pic16f688.h: 1364: unsigned ANS0 :1;
[; ;pic16f688.h: 1365: unsigned ANS1 :1;
[; ;pic16f688.h: 1366: unsigned ANS2 :1;
[; ;pic16f688.h: 1367: unsigned ANS3 :1;
[; ;pic16f688.h: 1368: unsigned ANS4 :1;
[; ;pic16f688.h: 1369: unsigned ANS5 :1;
[; ;pic16f688.h: 1370: unsigned ANS6 :1;
[; ;pic16f688.h: 1371: unsigned ANS7 :1;
[; ;pic16f688.h: 1372: };
[; ;pic16f688.h: 1373: } ANSELbits_t;
[; ;pic16f688.h: 1374: extern volatile ANSELbits_t ANSELbits @ 0x091;
[; ;pic16f688.h: 1418: extern volatile unsigned char WPUA @ 0x095;
"1420
[; ;pic16f688.h: 1420: asm("WPUA equ 095h");
[; <" WPUA equ 095h ;# ">
[; ;pic16f688.h: 1423: extern volatile unsigned char WPU @ 0x095;
"1425
[; ;pic16f688.h: 1425: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic16f688.h: 1428: typedef union {
[; ;pic16f688.h: 1429: struct {
[; ;pic16f688.h: 1430: unsigned WPUA0 :1;
[; ;pic16f688.h: 1431: unsigned WPUA1 :1;
[; ;pic16f688.h: 1432: unsigned WPUA2 :1;
[; ;pic16f688.h: 1433: unsigned :1;
[; ;pic16f688.h: 1434: unsigned WPUA4 :1;
[; ;pic16f688.h: 1435: unsigned WPUA5 :1;
[; ;pic16f688.h: 1436: };
[; ;pic16f688.h: 1437: struct {
[; ;pic16f688.h: 1438: unsigned WPU0 :1;
[; ;pic16f688.h: 1439: unsigned WPU1 :1;
[; ;pic16f688.h: 1440: unsigned WPU2 :1;
[; ;pic16f688.h: 1441: unsigned :1;
[; ;pic16f688.h: 1442: unsigned WPU4 :1;
[; ;pic16f688.h: 1443: unsigned WPU5 :1;
[; ;pic16f688.h: 1444: };
[; ;pic16f688.h: 1445: } WPUAbits_t;
[; ;pic16f688.h: 1446: extern volatile WPUAbits_t WPUAbits @ 0x095;
[; ;pic16f688.h: 1499: typedef union {
[; ;pic16f688.h: 1500: struct {
[; ;pic16f688.h: 1501: unsigned WPUA0 :1;
[; ;pic16f688.h: 1502: unsigned WPUA1 :1;
[; ;pic16f688.h: 1503: unsigned WPUA2 :1;
[; ;pic16f688.h: 1504: unsigned :1;
[; ;pic16f688.h: 1505: unsigned WPUA4 :1;
[; ;pic16f688.h: 1506: unsigned WPUA5 :1;
[; ;pic16f688.h: 1507: };
[; ;pic16f688.h: 1508: struct {
[; ;pic16f688.h: 1509: unsigned WPU0 :1;
[; ;pic16f688.h: 1510: unsigned WPU1 :1;
[; ;pic16f688.h: 1511: unsigned WPU2 :1;
[; ;pic16f688.h: 1512: unsigned :1;
[; ;pic16f688.h: 1513: unsigned WPU4 :1;
[; ;pic16f688.h: 1514: unsigned WPU5 :1;
[; ;pic16f688.h: 1515: };
[; ;pic16f688.h: 1516: } WPUbits_t;
[; ;pic16f688.h: 1517: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic16f688.h: 1571: extern volatile unsigned char IOCA @ 0x096;
"1573
[; ;pic16f688.h: 1573: asm("IOCA equ 096h");
[; <" IOCA equ 096h ;# ">
[; ;pic16f688.h: 1576: extern volatile unsigned char IOC @ 0x096;
"1578
[; ;pic16f688.h: 1578: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic16f688.h: 1581: typedef union {
[; ;pic16f688.h: 1582: struct {
[; ;pic16f688.h: 1583: unsigned IOCA0 :1;
[; ;pic16f688.h: 1584: unsigned IOCA1 :1;
[; ;pic16f688.h: 1585: unsigned IOCA2 :1;
[; ;pic16f688.h: 1586: unsigned IOCA3 :1;
[; ;pic16f688.h: 1587: unsigned IOCA4 :1;
[; ;pic16f688.h: 1588: unsigned IOCA5 :1;
[; ;pic16f688.h: 1589: };
[; ;pic16f688.h: 1590: struct {
[; ;pic16f688.h: 1591: unsigned IOC0 :1;
[; ;pic16f688.h: 1592: unsigned IOC1 :1;
[; ;pic16f688.h: 1593: unsigned IOC2 :1;
[; ;pic16f688.h: 1594: unsigned IOC3 :1;
[; ;pic16f688.h: 1595: unsigned IOC4 :1;
[; ;pic16f688.h: 1596: unsigned IOC5 :1;
[; ;pic16f688.h: 1597: };
[; ;pic16f688.h: 1598: } IOCAbits_t;
[; ;pic16f688.h: 1599: extern volatile IOCAbits_t IOCAbits @ 0x096;
[; ;pic16f688.h: 1662: typedef union {
[; ;pic16f688.h: 1663: struct {
[; ;pic16f688.h: 1664: unsigned IOCA0 :1;
[; ;pic16f688.h: 1665: unsigned IOCA1 :1;
[; ;pic16f688.h: 1666: unsigned IOCA2 :1;
[; ;pic16f688.h: 1667: unsigned IOCA3 :1;
[; ;pic16f688.h: 1668: unsigned IOCA4 :1;
[; ;pic16f688.h: 1669: unsigned IOCA5 :1;
[; ;pic16f688.h: 1670: };
[; ;pic16f688.h: 1671: struct {
[; ;pic16f688.h: 1672: unsigned IOC0 :1;
[; ;pic16f688.h: 1673: unsigned IOC1 :1;
[; ;pic16f688.h: 1674: unsigned IOC2 :1;
[; ;pic16f688.h: 1675: unsigned IOC3 :1;
[; ;pic16f688.h: 1676: unsigned IOC4 :1;
[; ;pic16f688.h: 1677: unsigned IOC5 :1;
[; ;pic16f688.h: 1678: };
[; ;pic16f688.h: 1679: } IOCbits_t;
[; ;pic16f688.h: 1680: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic16f688.h: 1744: extern volatile unsigned char EEDATH @ 0x097;
"1746
[; ;pic16f688.h: 1746: asm("EEDATH equ 097h");
[; <" EEDATH equ 097h ;# ">
[; ;pic16f688.h: 1750: extern volatile unsigned char EEADRH @ 0x098;
"1752
[; ;pic16f688.h: 1752: asm("EEADRH equ 098h");
[; <" EEADRH equ 098h ;# ">
[; ;pic16f688.h: 1756: extern volatile unsigned char VRCON @ 0x099;
"1758
[; ;pic16f688.h: 1758: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic16f688.h: 1761: typedef union {
[; ;pic16f688.h: 1762: struct {
[; ;pic16f688.h: 1763: unsigned VR :4;
[; ;pic16f688.h: 1764: unsigned :1;
[; ;pic16f688.h: 1765: unsigned VRR :1;
[; ;pic16f688.h: 1766: unsigned :1;
[; ;pic16f688.h: 1767: unsigned VREN :1;
[; ;pic16f688.h: 1768: };
[; ;pic16f688.h: 1769: struct {
[; ;pic16f688.h: 1770: unsigned VR0 :1;
[; ;pic16f688.h: 1771: unsigned VR1 :1;
[; ;pic16f688.h: 1772: unsigned VR2 :1;
[; ;pic16f688.h: 1773: unsigned VR3 :1;
[; ;pic16f688.h: 1774: };
[; ;pic16f688.h: 1775: } VRCONbits_t;
[; ;pic16f688.h: 1776: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic16f688.h: 1815: extern volatile unsigned char EEDAT @ 0x09A;
"1817
[; ;pic16f688.h: 1817: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic16f688.h: 1820: extern volatile unsigned char EEDATA @ 0x09A;
"1822
[; ;pic16f688.h: 1822: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f688.h: 1825: typedef union {
[; ;pic16f688.h: 1826: struct {
[; ;pic16f688.h: 1827: unsigned EEDAT :8;
[; ;pic16f688.h: 1828: };
[; ;pic16f688.h: 1829: } EEDATbits_t;
[; ;pic16f688.h: 1830: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic16f688.h: 1838: typedef union {
[; ;pic16f688.h: 1839: struct {
[; ;pic16f688.h: 1840: unsigned EEDAT :8;
[; ;pic16f688.h: 1841: };
[; ;pic16f688.h: 1842: } EEDATAbits_t;
[; ;pic16f688.h: 1843: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic16f688.h: 1852: extern volatile unsigned char EEADR @ 0x09B;
"1854
[; ;pic16f688.h: 1854: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f688.h: 1858: extern volatile unsigned char EECON1 @ 0x09C;
"1860
[; ;pic16f688.h: 1860: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f688.h: 1863: typedef union {
[; ;pic16f688.h: 1864: struct {
[; ;pic16f688.h: 1865: unsigned RD :1;
[; ;pic16f688.h: 1866: unsigned WR :1;
[; ;pic16f688.h: 1867: unsigned WREN :1;
[; ;pic16f688.h: 1868: unsigned WRERR :1;
[; ;pic16f688.h: 1869: unsigned :3;
[; ;pic16f688.h: 1870: unsigned EEPGD :1;
[; ;pic16f688.h: 1871: };
[; ;pic16f688.h: 1872: } EECON1bits_t;
[; ;pic16f688.h: 1873: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f688.h: 1902: extern volatile unsigned char EECON2 @ 0x09D;
"1904
[; ;pic16f688.h: 1904: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f688.h: 1908: extern volatile unsigned char ADRESL @ 0x09E;
"1910
[; ;pic16f688.h: 1910: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f688.h: 1914: extern volatile unsigned char ADCON1 @ 0x09F;
"1916
[; ;pic16f688.h: 1916: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f688.h: 1919: typedef union {
[; ;pic16f688.h: 1920: struct {
[; ;pic16f688.h: 1921: unsigned :4;
[; ;pic16f688.h: 1922: unsigned ADCS :3;
[; ;pic16f688.h: 1923: };
[; ;pic16f688.h: 1924: struct {
[; ;pic16f688.h: 1925: unsigned :4;
[; ;pic16f688.h: 1926: unsigned ADCS0 :1;
[; ;pic16f688.h: 1927: unsigned ADCS1 :1;
[; ;pic16f688.h: 1928: unsigned ADCS2 :1;
[; ;pic16f688.h: 1929: };
[; ;pic16f688.h: 1930: } ADCON1bits_t;
[; ;pic16f688.h: 1931: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f688.h: 1961: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f688.h: 1963: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f688.h: 1965: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f688.h: 1967: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f688.h: 1969: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f688.h: 1971: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f688.h: 1973: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f688.h: 1975: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f688.h: 1977: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f688.h: 1979: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f688.h: 1981: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f688.h: 1983: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f688.h: 1985: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f688.h: 1987: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f688.h: 1989: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f688.h: 1991: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f688.h: 1993: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f688.h: 1995: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f688.h: 1997: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f688.h: 1999: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f688.h: 2001: extern volatile __bit C1IE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f688.h: 2003: extern volatile __bit C1IF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f688.h: 2005: extern volatile __bit C1INV @ (((unsigned) &CMCON0)*8) + 4;
[; ;pic16f688.h: 2007: extern volatile __bit C1OUT @ (((unsigned) &CMCON0)*8) + 6;
[; ;pic16f688.h: 2009: extern volatile __bit C2IE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f688.h: 2011: extern volatile __bit C2IF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f688.h: 2013: extern volatile __bit C2INV @ (((unsigned) &CMCON0)*8) + 5;
[; ;pic16f688.h: 2015: extern volatile __bit C2OUT @ (((unsigned) &CMCON0)*8) + 7;
[; ;pic16f688.h: 2017: extern volatile __bit C2SYNC @ (((unsigned) &CMCON1)*8) + 0;
[; ;pic16f688.h: 2019: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f688.h: 2021: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f688.h: 2023: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f688.h: 2025: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f688.h: 2027: extern volatile __bit CIS @ (((unsigned) &CMCON0)*8) + 3;
[; ;pic16f688.h: 2029: extern volatile __bit CM0 @ (((unsigned) &CMCON0)*8) + 0;
[; ;pic16f688.h: 2031: extern volatile __bit CM1 @ (((unsigned) &CMCON0)*8) + 1;
[; ;pic16f688.h: 2033: extern volatile __bit CM2 @ (((unsigned) &CMCON0)*8) + 2;
[; ;pic16f688.h: 2035: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f688.h: 2037: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f688.h: 2039: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f688.h: 2041: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f688.h: 2043: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f688.h: 2045: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f688.h: 2047: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f688.h: 2049: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f688.h: 2051: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2053: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2055: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2057: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f688.h: 2059: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f688.h: 2061: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f688.h: 2063: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f688.h: 2065: extern volatile __bit IOC0 @ (((unsigned) &IOCA)*8) + 0;
[; ;pic16f688.h: 2067: extern volatile __bit IOC1 @ (((unsigned) &IOCA)*8) + 1;
[; ;pic16f688.h: 2069: extern volatile __bit IOC2 @ (((unsigned) &IOCA)*8) + 2;
[; ;pic16f688.h: 2071: extern volatile __bit IOC3 @ (((unsigned) &IOCA)*8) + 3;
[; ;pic16f688.h: 2073: extern volatile __bit IOC4 @ (((unsigned) &IOCA)*8) + 4;
[; ;pic16f688.h: 2075: extern volatile __bit IOC5 @ (((unsigned) &IOCA)*8) + 5;
[; ;pic16f688.h: 2077: extern volatile __bit IOCA0 @ (((unsigned) &IOCA)*8) + 0;
[; ;pic16f688.h: 2079: extern volatile __bit IOCA1 @ (((unsigned) &IOCA)*8) + 1;
[; ;pic16f688.h: 2081: extern volatile __bit IOCA2 @ (((unsigned) &IOCA)*8) + 2;
[; ;pic16f688.h: 2083: extern volatile __bit IOCA3 @ (((unsigned) &IOCA)*8) + 3;
[; ;pic16f688.h: 2085: extern volatile __bit IOCA4 @ (((unsigned) &IOCA)*8) + 4;
[; ;pic16f688.h: 2087: extern volatile __bit IOCA5 @ (((unsigned) &IOCA)*8) + 5;
[; ;pic16f688.h: 2089: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f688.h: 2091: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f688.h: 2093: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f688.h: 2095: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f688.h: 2097: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f688.h: 2099: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f688.h: 2101: extern volatile __bit OSFIE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f688.h: 2103: extern volatile __bit OSFIF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f688.h: 2105: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f688.h: 2107: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f688.h: 2109: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f688.h: 2111: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f688.h: 2113: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f688.h: 2115: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f688.h: 2117: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f688.h: 2119: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f688.h: 2121: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f688.h: 2123: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f688.h: 2125: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f688.h: 2127: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f688.h: 2129: extern volatile __bit RAIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f688.h: 2131: extern volatile __bit RAIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f688.h: 2133: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f688.h: 2135: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f688.h: 2137: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f688.h: 2139: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f688.h: 2141: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f688.h: 2143: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f688.h: 2145: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f688.h: 2147: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f688.h: 2149: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f688.h: 2151: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f688.h: 2153: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f688.h: 2155: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f688.h: 2157: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f688.h: 2159: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f688.h: 2161: extern volatile __bit SBODEN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f688.h: 2163: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f688.h: 2165: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f688.h: 2167: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f688.h: 2169: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f688.h: 2171: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f688.h: 2173: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f688.h: 2175: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f688.h: 2177: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f688.h: 2179: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f688.h: 2181: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f688.h: 2183: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f688.h: 2185: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f688.h: 2187: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f688.h: 2189: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f688.h: 2191: extern volatile __bit T1GSS @ (((unsigned) &CMCON1)*8) + 1;
[; ;pic16f688.h: 2193: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f688.h: 2195: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f688.h: 2197: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f688.h: 2199: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f688.h: 2201: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f688.h: 2203: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f688.h: 2205: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f688.h: 2207: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f688.h: 2209: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f688.h: 2211: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f688.h: 2213: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f688.h: 2215: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f688.h: 2217: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f688.h: 2219: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f688.h: 2221: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f688.h: 2223: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f688.h: 2225: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f688.h: 2227: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f688.h: 2229: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f688.h: 2231: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f688.h: 2233: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f688.h: 2235: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f688.h: 2237: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f688.h: 2239: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f688.h: 2241: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f688.h: 2243: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f688.h: 2245: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f688.h: 2247: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f688.h: 2249: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f688.h: 2251: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f688.h: 2253: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f688.h: 2255: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f688.h: 2257: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f688.h: 2259: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f688.h: 2261: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f688.h: 2263: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f688.h: 2265: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f688.h: 2267: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f688.h: 2269: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f688.h: 2271: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f688.h: 2273: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f688.h: 2275: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f688.h: 2277: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f688.h: 2279: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f688.h: 2281: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f688.h: 2283: extern volatile __bit WPU0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16f688.h: 2285: extern volatile __bit WPU1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16f688.h: 2287: extern volatile __bit WPU2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16f688.h: 2289: extern volatile __bit WPU4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16f688.h: 2291: extern volatile __bit WPU5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16f688.h: 2293: extern volatile __bit WPUA0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16f688.h: 2295: extern volatile __bit WPUA1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16f688.h: 2297: extern volatile __bit WPUA2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16f688.h: 2299: extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16f688.h: 2301: extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16f688.h: 2303: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f688.h: 2305: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f688.h: 2307: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f688.h: 2309: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f688.h: 2311: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f688.h: 2313: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f688.h: 2315: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f688.h: 2317: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2319: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f688.h: 2321: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f688.h: 2323: extern volatile __bit nRAPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f688.h: 2325: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f688.h: 2327: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 154: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 192: extern unsigned char __resetbits;
[; ;pic.h: 193: extern __bit __powerdown;
[; ;pic.h: 194: extern __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;data_type.h: 21: typedef char int8_t;
[; ;data_type.h: 22: typedef int int16_t;
[; ;data_type.h: 23: typedef long int32_t;
[; ;data_type.h: 32: typedef unsigned char uint8_t;
[; ;data_type.h: 33: typedef unsigned int uint16_t;
[; ;data_type.h: 34: typedef unsigned long uint32_t;
[; ;data_type.h: 35: typedef volatile unsigned char vuint8_t;
[; ;data_type.h: 36: typedef volatile unsigned int vuint16_t;
[; ;data_type.h: 37: typedef volatile unsigned long vuint32_t;
"24 adc.h
[v _VOLT_ARRAY `ui ~T0 @X0 -> 4 `i e ]
[; ;adc.h: 24: uint16_t VOLT_ARRAY[4];
"25
[v _CURRENT_ARRAY `ui ~T0 @X0 -> 4 `i e ]
[; ;adc.h: 25: uint16_t CURRENT_ARRAY[4];
"26
[v _POWER_FACTOR_ARRAY `ui ~T0 @X0 -> 4 `i e ]
[; ;adc.h: 26: uint16_t POWER_FACTOR_ARRAY[4];
"27
[v _FREQUENCY_ARRAY `ui ~T0 @X0 -> 4 `i e ]
[; ;adc.h: 27: uint16_t FREQUENCY_ARRAY[4];
"28
[v _PF_FLAG `uc ~T0 @X0 1 e ]
[i _PF_FLAG
-> -> 0 `i `uc
]
[; ;adc.h: 28: uint8_t PF_FLAG = 0;
"30
[v _PF_SIGN `uc ~T0 @X0 1 e ]
[; ;adc.h: 30: uint8_t PF_SIGN;
"31
[v _V_VALUE `ui ~T0 @X0 1 e ]
[v _A_VALUE `ui ~T0 @X0 1 e ]
[v _PF_VALUE `ui ~T0 @X0 1 e ]
[v _F_VALUE `ui ~T0 @X0 1 e ]
[i _F_VALUE
-> -> 50 `i `ui
]
[; ;adc.h: 31: uint16_t V_VALUE, A_VALUE, PF_VALUE, F_VALUE = 50;
[; ;adc.h: 34: void ADC_Init(void);
[; ;adc.h: 35: uint16_t ADC_Read(uint8_t ANC);
[; ;adc.h: 36: void ADC_RMS(uint16_t *ARRAY, uint8_t ANC,
[; ;adc.h: 37: uint16_t rate, const uint8_t index);
[; ;adc.h: 38: void ADC_PF (uint16_t *ARRAY, const uint8_t index);
[; ;adc.h: 39: uint16_t AVG (uint16_t *ARRAY, const uint8_t index);
"7 adc.c
[v _ADC_Init `(v ~T0 @X0 1 ef ]
{
[; ;adc.c: 7: void ADC_Init(void){
[e :U _ADC_Init ]
[f ]
[; ;adc.c: 8: CMCON0 = 0x07 ;
"8
[e = _CMCON0 -> -> 7 `i `uc ]
[; ;adc.c: 9: ANSEL = 0x03;
"9
[e = _ANSEL -> -> 3 `i `uc ]
[; ;adc.c: 10: ADCON0 = 0x81;
"10
[e = _ADCON0 -> -> 129 `i `uc ]
[; ;adc.c: 11: ADCON1 = 0x50;
"11
[e = _ADCON1 -> -> 80 `i `uc ]
[; ;adc.c: 12: ADRESH = 0;
"12
[e = _ADRESH -> -> 0 `i `uc ]
[; ;adc.c: 13: ADRESL = 0;
"13
[e = _ADRESL -> -> 0 `i `uc ]
[; ;adc.c: 14: }
"14
[e :UE 87 ]
}
"17
[v _ADC_Read `(ui ~T0 @X0 1 ef1`uc ]
{
[; ;adc.c: 17: uint16_t ADC_Read(uint8_t ANC){
[e :U _ADC_Read ]
[v _ANC `uc ~T0 @X0 1 r1 ]
[f ]
[; ;adc.c: 18: if(ANC<0 || ANC>7) return 0;
"18
[e $ ! || < -> _ANC `i -> 0 `i > -> _ANC `i -> 7 `i 89  ]
[e ) -> -> 0 `i `ui ]
[e $UE 88  ]
[e :U 89 ]
[; ;adc.c: 19: ADCON0 &= ~(7<<2);
"19
[e =& _ADCON0 -> ~ << -> 7 `i -> 2 `i `uc ]
[; ;adc.c: 20: ADCON0 |= ANC<<2;
"20
[e =| _ADCON0 -> << -> _ANC `i -> 2 `i `uc ]
[; ;adc.c: 21: _delay((unsigned long)((20)*(8000000/4000000.0)));
"21
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;adc.c: 22: GO_DONE = 1;
"22
[e = _GO_DONE -> -> 1 `i `b ]
[; ;adc.c: 23: while(ADCON0bits.GO_DONE);
"23
[e $U 90  ]
[e :U 91 ]
[e :U 90 ]
[e $ != -> . . _ADCON0bits 3 1 `i -> -> -> 0 `i `Vuc `i 91  ]
[e :U 92 ]
[; ;adc.c: 24: return ((ADRESH << 8) + ADRESL);
"24
[e ) -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `ui ]
[e $UE 88  ]
[; ;adc.c: 25: }
"25
[e :UE 88 ]
}
"28
[v _ADC_RMS `(v ~T0 @X0 1 ef4`*ui`uc`ui`Cuc ]
{
[; ;adc.c: 28: void ADC_RMS(uint16_t *ARRAY,uint8_t ANC, uint16_t rate, const uint8_t index){
[e :U _ADC_RMS ]
[v _ARRAY `*ui ~T0 @X0 1 r1 ]
[v _ANC `uc ~T0 @X0 1 r2 ]
[v _rate `ui ~T0 @X0 1 r3 ]
[v _index `Cuc ~T0 @X0 1 r4 ]
[f ]
"29
[v _i `uc ~T0 @X0 1 a ]
"30
[v _read `ui ~T0 @X0 1 a ]
"31
[v _max `ui ~T0 @X0 1 a ]
[; ;adc.c: 29: uint8_t i;
[; ;adc.c: 30: uint16_t read;
[; ;adc.c: 31: uint16_t max = 0;
[e = _max -> -> 0 `i `ui ]
"32
[v _min `ui ~T0 @X0 1 a ]
[; ;adc.c: 32: uint16_t min = 1023;
[e = _min -> -> 1023 `i `ui ]
[; ;adc.c: 33: for(i=0;i<256;i++){
"33
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 256 `i 94  ]
[e $U 95  ]
[e :U 94 ]
{
[; ;adc.c: 34: read = ADC_Read(ANC);
"34
[e = _read ( _ADC_Read (1 _ANC ]
[; ;adc.c: 35: if(read > max) max = read;
"35
[e $ ! > _read _max 97  ]
[e = _max _read ]
[e :U 97 ]
[; ;adc.c: 36: if(read < min) min = read;
"36
[e $ ! < _read _min 98  ]
[e = _min _read ]
[e :U 98 ]
"37
}
"33
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 256 `i 94  ]
[e :U 95 ]
"37
}
[; ;adc.c: 37: }
[; ;adc.c: 38: ARRAY[index] = (uint16_t)(((float)((max-min)/2)*rate)/10);
"38
[e = *U + _ARRAY * -> _index `ux -> -> # *U _ARRAY `ui `ux -> / * -> / - _max _min -> -> 2 `i `ui `f -> _rate `f -> -> 10 `i `f `ui ]
[; ;adc.c: 39: }
"39
[e :UE 93 ]
}
"42
[v _ADC_PF `(v ~T0 @X0 1 ef2`*ui`Cuc ]
{
[; ;adc.c: 42: void ADC_PF (uint16_t *ARRAY, const uint8_t index){
[e :U _ADC_PF ]
[v _ARRAY `*ui ~T0 @X0 1 r1 ]
[v _index `Cuc ~T0 @X0 1 r2 ]
[f ]
"43
[v _step `f ~T0 @X0 1 a ]
[; ;adc.c: 43: float step = 1;
[e = _step -> -> 1 `i `f ]
"44
[v _temp `f ~T0 @X0 1 a ]
[; ;adc.c: 44: float temp = 1;
[e = _temp -> -> 1 `i `f ]
"45
[v _rad_angle `f ~T0 @X0 1 a ]
"46
[v _i `uc ~T0 @X0 1 a ]
"47
[v _angle `ui ~T0 @X0 1 a ]
[; ;adc.c: 45: float rad_angle;
[; ;adc.c: 46: uint8_t i;
[; ;adc.c: 47: uint16_t angle;
[; ;adc.c: 49: TMR1H = 0; TMR1L = 0;
"49
[e = _TMR1H -> -> 0 `i `uc ]
[e = _TMR1L -> -> 0 `i `uc ]
[; ;adc.c: 50: PF_FLAG = 0;
"50
[e = _PF_FLAG -> -> 0 `i `uc ]
[; ;adc.c: 51: while(!PF_FLAG);
"51
[e $U 100  ]
[e :U 101 ]
[e :U 100 ]
[e $ ! != -> _PF_FLAG `i -> -> -> 0 `i `uc `i 101  ]
[e :U 102 ]
[; ;adc.c: 53: T1CONbits.TMR1ON = 1;
"53
[e = . . _T1CONbits 0 0 -> -> 1 `i `uc ]
[; ;adc.c: 55: PF_FLAG = 0;
"55
[e = _PF_FLAG -> -> 0 `i `uc ]
[; ;adc.c: 56: while(PORTC&0x01)
"56
[e $U 103  ]
[e :U 104 ]
[; ;adc.c: 57: if(PF_FLAG) break;
"57
[e $ ! != -> _PF_FLAG `i -> -> -> 0 `i `uc `i 106  ]
[e $U 105  ]
[e :U 106 ]
"58
[e :U 103 ]
"56
[e $ != & -> _PORTC `i -> 1 `i -> 0 `i 104  ]
[e :U 105 ]
[; ;adc.c: 58: T1CONbits.TMR1ON = 0;
"58
[e = . . _T1CONbits 0 0 -> -> 0 `i `uc ]
[; ;adc.c: 61: rad_angle = ((float)((uint16_t)(TMR1H<<8)+TMR1L) * F_VALUE) * 0.15708;
"61
[e = _rad_angle -> * -> * -> + -> << -> _TMR1H `i -> 8 `i `ui -> _TMR1L `ui `f -> _F_VALUE `f `d .0.15708 `f ]
[; ;adc.c: 62: angle = (uint16_t)rad_angle;
"62
[e = _angle -> _rad_angle `ui ]
[; ;adc.c: 64: switch((uint8_t)(angle/(31416/2))){
"64
[e $U 108  ]
{
[; ;adc.c: 65: case 0:
"65
[e :U 109 ]
[; ;adc.c: 66: PF_FLAG = 1;
"66
[e = _PF_FLAG -> -> 1 `i `uc ]
[; ;adc.c: 67: break;
"67
[e $U 107  ]
[; ;adc.c: 68: case 1:
"68
[e :U 110 ]
[; ;adc.c: 69: PF_FLAG = 0;
"69
[e = _PF_FLAG -> -> 0 `i `uc ]
[; ;adc.c: 70: angle = 31416 - angle;
"70
[e = _angle - -> -> 31416 `i `ui _angle ]
[; ;adc.c: 71: break;
"71
[e $U 107  ]
[; ;adc.c: 72: case 2:
"72
[e :U 111 ]
[; ;adc.c: 73: PF_FLAG = 0;
"73
[e = _PF_FLAG -> -> 0 `i `uc ]
[; ;adc.c: 74: angle = angle - 31416;
"74
[e = _angle - _angle -> -> 31416 `i `ui ]
[; ;adc.c: 75: break;
"75
[e $U 107  ]
[; ;adc.c: 76: case 3:
"76
[e :U 112 ]
[; ;adc.c: 77: PF_FLAG = 1;
"77
[e = _PF_FLAG -> -> 1 `i `uc ]
[; ;adc.c: 78: angle = (31416*2) - angle;
"78
[e = _angle - -> * -> 31416 `i -> 2 `i `ui _angle ]
[; ;adc.c: 79: break;
"79
[e $U 107  ]
[; ;adc.c: 80: default:
"80
[e :U 113 ]
[; ;adc.c: 81: PF_FLAG = 1;
"81
[e = _PF_FLAG -> -> 1 `i `uc ]
[; ;adc.c: 82: break;
"82
[e $U 107  ]
"83
}
[; ;adc.c: 83: }
[e $U 107  ]
"64
[e :U 108 ]
[e [\ -> / _angle -> / -> 31416 `i -> 2 `i `ui `uc , $ -> -> 0 `i `uc 109
 , $ -> -> 1 `i `uc 110
 , $ -> -> 2 `i `uc 111
 , $ -> -> 3 `i `uc 112
 113 ]
"83
[e :U 107 ]
[; ;adc.c: 86: if(angle<(31416/4)){
"86
[e $ ! < _angle -> / -> 31416 `i -> 4 `i `ui 114  ]
{
[; ;adc.c: 87: rad_angle /= 10000.0;
"87
[e =/ _rad_angle .10000.0 ]
[; ;adc.c: 88: rad_angle *= rad_angle;
"88
[e =* _rad_angle _rad_angle ]
[; ;adc.c: 89: for(i=1;i<=5;i++){
"89
{
[e = _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 5 `i 115  ]
[e $U 116  ]
[e :U 115 ]
{
[; ;adc.c: 90: step *= ((-1*rad_angle)/(2*i*(2*i-1)));
"90
[e =* _step / * -> -U -> 1 `i `f _rad_angle -> * * -> 2 `i -> _i `i - * -> 2 `i -> _i `i -> 1 `i `f ]
[; ;adc.c: 91: temp += step;
"91
[e =+ _temp _step ]
"93
}
"89
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 5 `i 115  ]
[e :U 116 ]
"93
}
"94
}
[; ;adc.c: 93: }
[; ;adc.c: 94: }else{
[e $U 118  ]
[e :U 114 ]
{
[; ;adc.c: 95: rad_angle = ((float)((31416/2)- rad_angle)/10000.0);
"95
[e = _rad_angle -> / -> - -> / -> 31416 `i -> 2 `i `f _rad_angle `d .10000.0 `f ]
[; ;adc.c: 96: temp = rad_angle;
"96
[e = _temp _rad_angle ]
[; ;adc.c: 97: step = rad_angle;
"97
[e = _step _rad_angle ]
[; ;adc.c: 98: rad_angle *= rad_angle;
"98
[e =* _rad_angle _rad_angle ]
[; ;adc.c: 99: for(i=1;i<=5;i++){
"99
{
[e = _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 5 `i 119  ]
[e $U 120  ]
[e :U 119 ]
{
[; ;adc.c: 100: step *= ((-1*rad_angle)/(2*i*(2*i+1)));
"100
[e =* _step / * -> -U -> 1 `i `f _rad_angle -> * * -> 2 `i -> _i `i + * -> 2 `i -> _i `i -> 1 `i `f ]
[; ;adc.c: 101: temp += step;
"101
[e =+ _temp _step ]
"103
}
"99
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 5 `i 119  ]
[e :U 120 ]
"103
}
"104
}
[e :U 118 ]
[; ;adc.c: 103: }
[; ;adc.c: 104: }
[; ;adc.c: 106: ARRAY[index] = (uint16_t)(temp*10000);
"106
[e = *U + _ARRAY * -> _index `ux -> -> # *U _ARRAY `ui `ux -> * _temp -> -> 10000 `i `f `ui ]
[; ;adc.c: 107: if(!index)
"107
[e $ ! ! != -> _index `i -> -> -> 0 `i `Cuc `i 122  ]
[; ;adc.c: 108: PF_SIGN = 0;
"108
[e = _PF_SIGN -> -> 0 `i `uc ]
[e :U 122 ]
[; ;adc.c: 109: PF_SIGN += (temp >= 0 ? 0 : 1);
"109
[e =+ _PF_SIGN -> ? >= _temp -> -> 0 `i `f : -> 0 `i -> 1 `i `uc ]
[; ;adc.c: 112: }
"112
[e :UE 99 ]
}
"115
[v _AVG `(ui ~T0 @X0 1 ef2`*ui`Cuc ]
{
[; ;adc.c: 115: uint16_t AVG(uint16_t *ARRAY, const uint8_t index){
[e :U _AVG ]
[v _ARRAY `*ui ~T0 @X0 1 r1 ]
[v _index `Cuc ~T0 @X0 1 r2 ]
[f ]
"116
[v _i `uc ~T0 @X0 1 a ]
"117
[v _avg `uc ~T0 @X0 1 a ]
[; ;adc.c: 116: uint8_t i;
[; ;adc.c: 117: uint8_t avg = 0;
[e = _avg -> -> 0 `i `uc ]
"118
[v _ret `ul ~T0 @X0 1 a ]
[; ;adc.c: 118: uint32_t ret = 0;
[e = _ret -> -> -> 0 `i `l `ul ]
[; ;adc.c: 119: for(i=1;i<index;i++){
"119
{
[e = _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> _index `i 124  ]
[e $U 125  ]
[e :U 124 ]
{
[; ;adc.c: 120: if(ARRAY[i]>0){
"120
[e $ ! > *U + _ARRAY * -> _i `ux -> -> # *U _ARRAY `ui `ux -> -> 0 `i `ui 127  ]
{
[; ;adc.c: 121: ret += ARRAY[i];
"121
[e =+ _ret -> *U + _ARRAY * -> _i `ux -> -> # *U _ARRAY `ui `ux `ul ]
[; ;adc.c: 122: avg++;
"122
[e ++ _avg -> -> 1 `i `uc ]
"123
}
[e :U 127 ]
"124
}
"119
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> _index `i 124  ]
[e :U 125 ]
"124
}
[; ;adc.c: 123: }
[; ;adc.c: 124: }
[; ;adc.c: 125: return ((uint16_t)(ret / avg));
"125
[e ) -> / _ret -> _avg `ul `ui ]
[e $UE 123  ]
[; ;adc.c: 126: }
"126
[e :UE 123 ]
}
